rails new TaskManager
ruby bin/rails generate controller Containers index --skip-routes
ruby bin/rails generate model Container name:string
ruby bin/rails db:migrate
ruby bin/rails generate model Task title:string body:text tag:text due:datetime priority:integer container:references

t = Task.new(title:"First task", body:"body of first task", tag:"tag of first task", due:"2020-12-29 11:12:23", priority:"2")

http://guides.rubyonrails.org/getting_started.html

http://railscasts.com/episodes/228-sortable-table-columns?view=asciicast // Sort table tutorial

ruby bin/rails generate controller Task index --skip-routes
ruby bin/rails generate model Task name:string description:string due:datetime priority:integer tag:string is_done:boolean
ruby bin/rails db:migrate

t.boolean :is_done, default: false


Immutability makes complex features much easier to implement. Later in this tutorial, we will implement a “time travel” feature that allows us to review the tic-tac-toe game’s history and “jump back” to previous moves. This functionality isn’t specific to games — an ability to undo and redo certain actions is a common requirement in applications. Avoiding direct data mutation lets us keep previous versions of the game’s history intact, and reuse them later.
